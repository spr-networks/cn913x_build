name: Ubuntu ISO Installer - CN9130

on:
  workflow_run:
    workflows: ["Docker Image CI - CN9130"]
    types:
      - completed
    branches: [ supernetworks ]

jobs:
  build_iso:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Fetch tags
        run:  git fetch --tags
      - name: Get version from git
        run: echo "RELEASE_VERSION_TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
      - name: Prepare build container
        run: cd docker && docker build . -t cnb
      - name: Run it
        run: docker run --privileged -v /dev:/dev --rm -i -t -v "$PWD":/cn913x_build_dir cnb ./runme.sh
#      - name: Set up Qemu emulation
#        run: ./installer/qemu-setup-linux.sh
#      - name: Download the image
#        working-directory: ./installer
#        run: ./download-img.sh
#      - name: Build install image
#        working-directory: ./installer
#        run: ./run-docker-image-build.sh
#      - name: Compress image
#        run: xz ./installer/data/spr.img
#      - name: Create Release
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ env.RELEASE_VERSION_TAG }}
#          release_name: Release ${{ env.RELEASE_VERSION_TAG }}
#          draft: false
#          prerelease: false
#      - name: Upload Release Asset
#        id: upload-release-asset
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./installer/data/spr.img.xz
#          asset_name: spr.img.xz
#          asset_content_type: application/x-xz
